USE PRATAP_EMPLOYEE
CREATE TABLE STUDENTS
(
NAME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(300) NOT NULL,
AGE INT  NOT NULL,
CITY VARCHAR(23) NOT NULL
)
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('SAI','SAI@GMAIL.COM',21,'ONGOLE')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('PRATAP','PRAA@GMAIL.COM',22,'CHENNAI')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('VIKRAMA','VIA@GMAIL.COM',28,'GUNTUR')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('ADHITYA','ADI@GMAIL.COM',18,'CHENNAI')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('CHANDRA','CHA@GMAIL.COM',48,'HYDERBAD')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('LAKSHMI','LAK@GMAIL.COM',56,'CHENNAI')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('VIJAY','VJ@GMAIL.COM',62,'ONGOLE')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('YESWANTH','YJ@GMAIL.COM',10,'THIRUPATHI')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('HAPPY','HAPPY@GMAIL.COM',89,'MUMBAI')
INSERT INTO STUDENTS(NAME,EMAIL,AGE,CITY)VALUES('HARI','HARI@GMAIL.COM',48,'CHENNAI')
SELECT NAME,CITY FROM STUDENTS
SELECT NAME,AGE,CITY FROM STUDENTS WHERE( CITY='ONGOLE' OR CITY='CHENNAI') AND AGE<60
SELECT NAME,AGE,CITY FROM STUDENTS WHERE ( CITY='CHENNAI') AND AGE  BETWEEN 30 AND 60
--IN KEYWORD CHECK PRESENT IN A LIST OR NOT
SELECT * FROM STUDENTS WHERE CITY IN ('ONGOLE','CHENNAI','GUNTUR')
--STUDENTS HAVING NAME STARTS WITH 'S'
SELECT * FROM STUDENTS WHERE NAME LIKE'S%'
--STUDENTS NAME CONTAINS 'S'
SELECT * FROM STUDENTS WHERE NAME LIKE'%S%'
--STUDENTS HAVING NAME ENDS WITH 'S'
SELECT * FROM STUDENTS WHERE NAME LIKE'%S'
--STUDENTS HAVING NAME SECOND LETTER STARTS WITH 'A'
SELECT * FROM STUDENTS WHERE NAME LIKE'_A%'
--AGREGATE FUNCTIONS:DISTINCT,COUNT,MIN,MAX,SUM
SELECT DISTINCT CITY FROM STUDENTS 
SELECT COUNT(*) FROM STUDENTS
SELECT COUNT(*)AS TOTAL FROM STUDENTS
SELECT COUNT(DISTINCT CITY)AS TOTALCITY FROM STUDENTS
SELECT MIN(AGE)AS MINIMUM_AGE FROM STUDENTS WHERE CITY='CHENNAI'
SELECT MAX(AGE)AS MAXIMUM_AGE FROM STUDENTS WHERE CITY='CHENNAI'
SELECT AVG(AGE)AS AVERAGE_AGE FROM STUDENTS WHERE CITY='CHENNAI'
SELECT * FROM STUDENTS WHERE NAME LIKE'%S%'
SELECT MIN(AGE)AS MINIMUM_AGE FROM STUDENTS WHERE NAME LIKE'%S%'
SELECT SUM(AGE)AS AGESUM FROM STUDENTS
SELECT SUM(AGE)AS AGESUM FROM STUDENTS
SELECT NAME,AGE,CITY FROM STUDENTS ORDER BY AGE ASC
SELECT NAME,AGE,CITY FROM STUDENTS ORDER BY AGE DESC
SELECT NAME,AGE,CITY FROM STUDENTS ORDER BY CITY ASC,AGE DESC
--CASE STATEMENT
SELECT NAME,AGE,
CASE 
	WHEN AGE <20 THEN 'JSE'
	WHEN AGE >=20 AND AGE < 45 THEN 'SE'
	WHEN AGE >=45 AND AGE < 55 THEN 'SSE'
	ELSE 'PM'
END AS DESIGNATIONS
FROM STUDENTS
--GROUPBY,HAVING
SELECT CITY,COUNT(*) AS NUMBEROFSTUDENTS  FROM STUDENTS GROUP BY CITY HAVING COUNT(*)>1
SELECT CITY,MIN(AGE) AS MINAGE FROM STUDENTS GROUP BY CITY
SELECT CITY,MAX(AGE) AS MAXAGE FROM STUDENTS GROUP BY CITY
SELECT CITY,COUNT(*)AS PEOPLE  FROM STUDENTS GROUP BY CITY HAVING COUNT(*)>2
--TOP:WE WILL GET TOP MOST VALUES
SELECT TOP 1 NAME,AGE,CITY FROM STUDENTS ORDER BY AGE DESC
ALTER TABLE STUDENTS ADD ID INT NOT NULL IDENTITY(101,1)


--SET A PRIMARY KEY
ALTER TABLE STUDENTS ADD PRIMARY KEY(ID)

CREATE TABLE EMP
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	EMPID INT NOT NULL,
	WORKDAY DATETIME NOT NULL,
	TOTALHOURS INT NOT NULL
)
INSERT INTO EMP (EMPID,WORKDAY,TOTALHOURS)VALUES(101,GETDATE(),8)
SELECT * FROM STUDENTS
SELECT * FROM EMP

--SET A FOREIGN KEY
ALTER TABLE EMP ADD CONSTRAINT FOREIN_KEY FOREIGN KEY(EMPID) REFERENCES STUDENTS(ID)
INSERT INTO EMP (EMPID,WORKDAY,TOTALHOURS)VALUES(102,GETDATE(),7)
INSERT INTO EMP (EMPID,WORKDAY,TOTALHOURS)VALUES(103,GETDATE(),5)
INSERT INTO EMP (EMPID,WORKDAY,TOTALHOURS)VALUES(104,GETDATE(),9)
INSERT INTO EMP (EMPID,WORKDAY,TOTALHOURS)VALUES(105,GETDATE(),6)

--joins
--left inner join
SELECT STUDENTS.ID,NAME,WORKDAY,TOTALHOURS FROM STUDENTS
JOIN EMP ON STUDENTS.ID=EMP.EMPID
--left inner join
SELECT S.ID,NAME,AGE,WORKDAY,TOTALHOURS FROM STUDENTS S
JOIN EMP E ON S.ID=E.EMPID

--left outter join
SELECT S.ID,NAME,AGE,WORKDAY,TOTALHOURS FROM STUDENTS S
LEFT OUTER JOIN EMP E ON S.ID=E.EMPID

SELECT S.ID,NAME,AGE,WORKDAY,TOTALHOURS FROM STUDENTS S
LEFT OUTER JOIN EMP E ON S.ID=E.EMPID
WHERE E.WORKDAY IS NULL

--RIGHT OUTER JOIN
SELECT * FROM EMP E 
RIGHT OUTER JOIN STUDENTS S ON S.ID=E.EMPID

--CROSS JOIN
SELECT * FROM EMP E 
CROSS JOIN STUDENTS S 
